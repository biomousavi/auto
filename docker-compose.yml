services:
  dev:
    build:
      context: .
      target: development 
      dockerfile: ./Dockerfile
    env_file: ./.env 
    container_name: backend-dev
    restart: unless-stopped
    volumes:
      - .:/app 
      - /app/node_modules 
    depends_on:
      - postgres
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}" 
    command: "npm run start:debug"
    environment:
      - PG_URL=${PG_URL}

  prod:
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    env_file: ./.env
    container_name: backend-prod
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    command: "dist/main.js" 
    environment:
      - PG_URL=${PG_URL}

  postgres:
    image: postgres:16-alpine
    env_file: ./.env
    restart: always
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - ${PG_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: